{"version":3,"sources":["dist/hyperapp-context.js"],"names":["global","factory","exports","module","define","amd","context","this","app","initialState","actionDefinitions","originalView","container","state","actions","rootNode","processVTree","node","props","Object","assign","Array","isArray","map","n","prototype","concat","apply","filter","attributes","children","length"],"mappings":"CAAC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAOH,GACnDD,EAAOM,QAAUL,IAHnB,CAIEM,KAAM,WAAe,aAgCvB,OAVA,SAAgBC,GACZ,OAAO,SAAUC,EAAcC,EAAmBC,EAAcC,GAK5D,OAAOJ,EAAIC,EAAcC,EAJd,SAAUG,EAAOC,GACxB,IAAIC,EAvBhB,SAASC,EAAcC,EAAMX,GAEzB,OADAA,EAAUA,MACE,MAARW,EAAqBA,EACL,mBAATA,EACAD,EACHC,EAAKX,EAAS,SAAUY,GAASZ,EAAUa,OAAOC,UAAWd,EAASY,KACtEZ,GAGJe,MAAMC,QAAQL,IACdA,EAAOA,EAAKM,IAAI,SAAUC,GAAK,OAAOR,EAAaQ,EAAGlB,KAEtDW,GADAA,EAAOI,MAAMI,UAAUC,OAAOC,SAAUV,IAC5BW,OAAO,SAAUJ,GAAK,OAAY,MAALA,KAGxCP,EAAKY,YACVZ,EAAKa,SAAWd,EAAaC,EAAKa,SAAUxB,GACrCW,GAFsBA,EAQND,CAAaL,EAAaE,EAAOC,IAChD,OAAOC,EAASgB,OAAShB,EAAS,GAAKA,GAEOH","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.context = factory());\n}(this, (function () { 'use strict';\n\nfunction processVTree (node, context) {\n    context = context ||Â {};\n    if (node == null) return node\n    if (typeof node === 'function') {\n        return processVTree(\n            node(context, function (props) { context = Object.assign({}, context, props);}),\n            context\n        )\n    }\n    if (Array.isArray(node)) {\n        node = node.map(function (n) { return processVTree(n, context)});\n        node = Array.prototype.concat.apply([], node);\n        node = node.filter(function (n) { return n != null });\n        return node\n    }\n    if (!node.attributes) return node\n    node.children = processVTree(node.children, context);\n    return node\n}\n\nfunction index (app) {\n    return function (initialState, actionDefinitions, originalView, container) {\n        var view = function (state, actions) {\n            var rootNode = processVTree(originalView(state, actions));\n            return rootNode.length ? rootNode[0] : rootNode\n        };\n        return app(initialState, actionDefinitions, view, container)\n    }\n}\n\nreturn index;\n\n})));\n//# sourceMappingURL=hyperapp-context.js.map\n"]}